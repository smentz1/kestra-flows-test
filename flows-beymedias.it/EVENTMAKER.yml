id: EVENTMAKER
namespace: null

# https://app.eventmaker.io/swagger/index.html
# https://developers.eventmaker.io/rest-apis/eventmaker-rest-api/guests

variables:
  projectId: beymedias-raw
  datasetId: eventmaker
  endpoint: https://app.eventmaker.io/api/v1
  accountId: 57e64a4b2667eb02c300375e
  pageSize: 2000

tasks:

  - id: fetch_events
    type: io.kestra.plugin.core.http.Request
    uri: "{{ vars.endpoint }}/events.json?auth_token={{ secret('EVENTMAKER_API_KEY') }}&per_page={{ vars.pageSize }}"

  - id: save_output
    type: io.kestra.plugin.core.storage.Write
    content: "{{ outputs.fetch_events.body 
      | jq('.[] | {
        _id
        , title
        , description
        , organizer
        , start_date: .start_date | if .==null then null else \"\\(.[0:10])T\\(.[11:19])\" end 
        , end_date: .end_date | if .==null then null else \"\\(.[0:10])T\\(.[11:19])\" end 
        } | @json ') 
      | join('\n') }}"
    extension: .jsonl

  - id: import_bigquery_event
    type: io.kestra.plugin.gcp.bigquery.Load
    autodetect: true
    destinationTable: '{{ vars.datasetId }}.raw_event'
    format: JSON
    writeDisposition: WRITE_TRUNCATE
    location: 'eu'
    projectId: '{{ vars.projectId }}'
    serviceAccount: '{{ secret("GCP_SERVICE_ACCOUNT") }}'
    from: '{{ outputs.save_output.uri}}'

  - id: fetch_event_guests
    type: io.kestra.plugin.core.flow.ForEach
    values: "{{ outputs.fetch_events.body | jq('.[]._id') }}" 
    concurrencyLimit: 1
    tasks:
      - id: save_event_guests
        type: io.kestra.plugin.core.flow.Subflow
        namespace: null
        flowId: EVENTMAKER_GUESTS
        wait: true 
        inputs:
          eventId: "{{ taskrun.value }}"
   
