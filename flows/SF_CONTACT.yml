id: SF_CONTACT
namespace: null

variables:
  soql: SELECT Id, Email FROM Contact WHERE Email != NULL
  
tasks:
  - id: login
    type: io.kestra.plugin.core.http.Request
    uri: https://agefi.my.salesforce.com/services/oauth2/token
    method: POST
    formData:
      grant_type: client_credentials
      client_id: "{{ secret('SALESFORCE_CLIENT_ID') }}"
      client_secret: "{{ secret('SALESFORCE_CLIENT_SECRET') }}"

  - id: fetch_api_list
    type: io.kestra.plugin.scripts.node.Script
    containerImage: node:slim
    env:
      SOQL: "{{ render(vars.soql) }}"
      API_TOKEN: "{{ outputs.login.body | jq('.access_token') | first }}"
    beforeCommands:
      - echo '{"type":"module"}' > ./package.json
      - npm --silent i @kestra-io/libs
    script: |
      import Kestra from "@kestra-io/libs";
      
      async function main() {
        const results = [];
        let url = 'https://agefi.my.salesforce.com/services/data/v63.0/query?q=${encodeURIComponent(process.env.SOQL)}';
        while (url) {
          const res = await fetch(url, {headers: { Authorization:`Bearer ${process.env.API_TOKEN}`}});
          const data = await res.json();
          url = data.nextRecordsUrl;
          results.push(...data.records.map(r=>({id:r.Id,email:r.Email})));
        }

        Kestra.outputs({ results: results.map(r=>JSON.stringify(r)).join('\n') })
      }
      main()

  - id: save_output
    type: io.kestra.plugin.core.storage.Write
    content: "{{ outputs.fetch_api_list.vars.results}}"
    extension: .json

  - id: update_bigquery
    type: io.kestra.plugin.gcp.bigquery.Load
    autodetect: true
    destinationTable: 'dev_piano.raw_salesforce_contact'
    format: JSON
    writeDisposition: WRITE_APPEND
    location: 'eu'
    from: '{{ outputs.save_output.uri }}'